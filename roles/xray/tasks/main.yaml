### xray config
- name: Set up xray folder
  become: yes
  file:
    path: "{{ app_path }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    recurse: yes
    state: directory

- name: Set up xray configs
  become: yes
  become_user: "{{ username }}"
  block:
    - name: Generate server config
      template:
        src: server_config.json.j2
        dest: "{{ app_path }}/server_config.json"
    - name: Set up log folder
      file:
        path: "{{ app_path }}/log"
        state: directory


### nginx config
- name: Set up nginx www folder
  import_role:
    name: www

- name: Generate nginx config for xray
  become: yes
  become_user: "{{ nginx_user }}"
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_path }}/conf.d/{{ item }}/www/xray.conf"
  loop: "{{ domains }}"


### Firewall for udp full-cone support
- name: Create firewalld service rule
  become: yes
  copy:
    src: xray.xml
    dest: /etc/firewalld/services
  notify: Reload firewalld

- meta: flush_handlers

- name: Enable firewalld service rule
  become: yes
  ansible.posix.firewalld:
    service: xray
    state: enabled
    immediate: yes
    permanent: yes


### Podman container and service
- name: Create xray container
  become: yes
  become_user: "{{ username }}"
  containers.podman.podman_container:
    name: "{{ container }}"
    image: docker.io/teddysun/xray
    label:
      io.containers.autoupdate: registry
      PODMAN_SYSTEMD_UNIT: "container-{{ container }}.service"
    network: host
    volumes:
      - "{{ app_path }}/server_config.json:/etc/xray/config.json:ro"
      - "{{ app_path }}/log:/var/log/xray"
    recreate: yes
    state: created
    healthcheck: "netstat -ntlp | grep -q :{{ xray_port }}"
    healthcheck_interval: 10s
    healthcheck_timeout: 2s
    healthcheck_retries: 3
    generate_systemd:
      path: "/home/{{ username }}/.config/systemd/user"
      restart_policy: always

- name: Enable and start xray service
  become: yes
  become_user: "{{ username }}"
  systemd:
    name: "container-{{ container }}.service"
    scope: user
    daemon_reload: yes
    enabled: yes
    state: started
