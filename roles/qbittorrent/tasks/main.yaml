- name: Create relevant folders
  become: yes
  file:
    path: "{{ item }}"
    owner: "{{ podman_username }}"
    group: "{{ podman_username }}"
    recurse: yes
    state: directory
  loop:
    - "{{ qbittorrent_path }}"
    - "{{ download_path }}"

### Podman container and service
- name: Create qBittorrent container
  become: yes
  become_user: "{{ podman_username }}"
  containers.podman.podman_container:
    name: "{{ qbittorrent_container }}"
    image: docker.io/linuxserver/qbittorrent
    label:
      io.containers.autoupdate: registry
      PODMAN_SYSTEMD_UNIT: "container-{{ qbittorrent_container }}.service"
    env:
      PUID: "0"
      PGID: "0"
    network: "{{ podman_network }}"
    publish:
      - "{{ qbittorrent_direct_port }}:{{ qbittorrent_direct_port }}/tcp"
      - "{{ qbittorrent_direct_port }}:{{ qbittorrent_direct_port }}/udp"
    volume:
      - "{{ qbittorrent_path }}:/config:z"
      - "{{ download_path }}:{{ download_path }}:z"
    state: created
    healthcheck: "netstat -ntlp | grep -q :8080"
    healthcheck_interval: 10s
    healthcheck_timeout: 2s
    healthcheck_retries: 3
    generate_systemd:
      path: "/home/{{ podman_username }}/.config/systemd/user"

- name: Enable and start qBittorrent service
  become: yes
  become_user: "{{ podman_username }}"
  systemd:
    name: "container-{{ qbittorrent_container }}.service"
    scope: user
    daemon_reload: yes
    enabled: yes
    state: started

- name: Sanity check for direct port listened
  wait_for:
    port: "{{ qbittorrent_direct_port }}"
    timeout: 5

- name: Create nginx rule to access webui
  become: yes
  become_user: "{{ podman_username }}"
  template:
    src: qbittorrent.conf.j2
    dest: "{{ nginx_path }}/conf.d/{{ item }}/qbittorrent.conf"
    setype: container_file_t
  loop: "{{ domains }}"
  notify: "Reload nginx"
