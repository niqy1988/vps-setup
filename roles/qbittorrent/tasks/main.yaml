- name: Create qBittorrent folder
  become: yes
  file:
    path: "{{ qbittorrent_data_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
    follow: no
    state: directory

- name: Set up qBittorrent folder
  block:
    - name: Set up folders to mount into docker
      file:
        path: "{{ qbittorrent_data_path }}/{{ item }}"
        state: directory
      loop:
        - config
        - downloads
    - name: Set up downloads folder link destinations
      file:
        path: "{{ qbittorrent_data_path }}/downloads/{{ item.target | dirname }}"
        state: directory
      loop: "{{ qbittorrent_data_links }}"
    - name: Set up data folder links
      file:
        path: "{{ qbittorrent_data_path }}/downloads/{{ item.target }}"
        src: "{{ item.source }}"
        state: link
      loop: "{{ qbittorrent_data_links}}"

- name: Create nginx folder
  become: yes
  file:
    path: "{{ nginx_config_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory

- name: Set up nginx site rules
  block:
    - name: Create site folders
      file:
        path: "{{ nginx_config_path }}/conf.d/{{ item.domain_name }}"
        state: directory
      loop: "{{ qbittorrent_domains }}"
    - name: Generate nginx config for qBittorrent
      template:
        src: qbittorrent.conf.j2
        dest: "{{ nginx_config_path }}/conf.d/{{ item.domain_name }}/qbittorrent.conf"
      loop: "{{ qbittorrent_domains }}"

- name: Set up docker networks
  docker_network: 
    name: "{{ item.name }}"
  loop: "{{ qbittorrent_networks }}"

- name: Start qBittorrent container
  community.general.docker_container:
    name: "{{ qbittorrent_container_name }}"
    image: ghcr.io/linuxserver/qbittorrent
    env:
      PUID: "0"
      PGID: "0"
    mounts:
      - source: "{{ qbittorrent_data_path }}/config"
        target: /config
        type: bind
      - source: "{{ qbittorrent_data_path }}/downloads"
        target: /downloads
        type: bind
      - source: /mnt
        target: /mnt
        type: bind
        propagation: rslave
      - source: /bin/netstat
        target: /bin/netstat
        type: bind
        read_only: yes
    ports:
      - "{{ qbittorrent_bt_port }}:{{ qbittorrent_bt_port }}"
      - "{{ qbittorrent_bt_port }}:{{ qbittorrent_bt_port }}/udp"
    networks: "{{ qbittorrent_networks }}"
    network_mode: default
    purge_networks: yes
    networks_cli_compatible: yes
    container_default_behavior: no_defaults
    restart_policy: always
    pull: yes
    recreate: yes
    healthcheck:
      test:
        - CMD-SHELL
        - "netstat -ntlp | grep -q :8080"
      interval: 10s
      timeout: 2s
      retries: 3
