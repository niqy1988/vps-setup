- name: Create filebrowser folder
  become: yes
  file:
    path: "{{ filebrowser_data_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
    follow: no
    state: directory

- name: Set up configs
  block: 
    - name: Copy config file
      copy:
        src: config.json
        dest: "{{ filebrowser_data_path }}/config.json"
    - name: Create database file
      file:
        path: "{{ filebrowser_data_path }}/database.db"
        state: touch

- name: Set up share file folder
  block:
    - name: Set up root folder
      file:
        path: "{{ filebrowser_data_path }}/srv"
        state: directory
    - name: Set up data link destinations
      file:
        path: "{{ filebrowser_data_path }}/srv/{{ item.target | dirname }}"
        state: directory
      loop: "{{ filebrowser_data_links }}"
    - name: Set up data links
      file:
        path: "{{ filebrowser_data_path }}/srv/{{ item.target }}"
        src: "{{ item.source }}"
        state: link
      loop: "{{ filebrowser_data_links}}"

- name: Create nginx folder
  become: yes
  file:
    path: "{{ nginx_config_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory

- name: Set up nginx site rules
  block:
    - name: Create site folders
      file:
        path: "{{ nginx_config_path }}/conf.d/{{ item.domain_name }}"
        state: directory
      loop: "{{ filebrowser_domains }}"
    - name: Generate nginx config for filebrowser
      template:
        src: filebrowser.conf.j2
        dest: "{{ nginx_config_path }}/conf.d/{{ item.domain_name }}/filebrowser.conf"
      loop: "{{ filebrowser_domains }}"

- name: Set up docker networks
  docker_network: 
    name: "{{ item.name }}"
  loop: "{{ filebrowser_networks }}"

- name: Start filebrowser container
  community.general.docker_container:
    name: "{{ filebrowser_container_name }}"
    image: filebrowser/filebrowser
    mounts:
      - source: "{{ filebrowser_data_path }}/config.json"
        target: /.filebrowser.json
        type: bind
      - source: "{{ filebrowser_data_path }}/database.db"
        target: /database.db
        type: bind
      - source: "{{ filebrowser_data_path }}/srv"
        target: /srv
        type: bind
      - source: /mnt
        target: /mnt
        type: bind
        propagation: rslave
    networks: "{{ filebrowser_networks }}"
    network_mode: default
    purge_networks: yes
    networks_cli_compatible: yes
    container_default_behavior: no_defaults
    restart_policy: always
    pull: yes
    recreate: yes
